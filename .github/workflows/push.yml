name: push

permissions: read-all

on: [push, pull_request]

env:
  GO_VERSION: '1.21.0'

jobs:
  lint-backend:
    name: Lint Backend
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
          stable: false

      - name: Check out code
        uses: actions/checkout@v2

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          skip-pkg-cache: true
          skip-build-cache: true
          args: --timeout 5m

  lint-frontend:
    name: Lint Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Check out code
        uses: actions/checkout@v2

      - name: Lint
        working-directory: ./frontend
        run: bun install && bun run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
          stable: false

      - name: Check out code
        uses: actions/checkout@v2

      - name: Test
        run: go test -v ./...

  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    needs:
      - lint-backend
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
          stable: false

      - name: Check out
        uses: actions/checkout@v2

      - name: Build wasm
        run: go build -ldflags="-s -w" -v -o build.wasm ./wasm
        env:
          GOOS: js
          GOARCH: wasm

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs:
      - lint-frontend
    steps:
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Check out
        uses: actions/checkout@v2

      - name: Build frontend
        working-directory: frontend
        run: |
          bun install 
          bun run build
